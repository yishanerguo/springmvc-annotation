1.web容器在启动时,会扫描每个jar包下的META-INF/services/javax.servlet.ServletContainerInitializer
2.加载这个文件制定的类SpringServletContainerInitializer
3.spring的应用一启动会加载感兴趣的webapplicationInitializer接口下的所有组件
4.并且为WebApplicationInitializer组件创建对象(组件不是接口,不是抽象类)
    1.AbstractContextLoaderInitializer:创建根容器:createRootApplicationContext();
    2.AbstractDispatcherServletInitializer:
         创建一个web的ioc容器:createServletApplicationContext();
         创建了DispatcherServlet:createDispatcherServlet();
         将创建DispatcherServlet添加到servletcontext中
                    getServletMappings();
    3.AbstractAnnotationConfigDispatcherServletInitializer:注解方式配置的
        创建根容器:createRootApplicationContext()
                getRootConfigClasses();传入一个配置类

        创建web的ioc容器:createServletApplicationContext
               获取配置类:getServletConfigClasses();

总结:
   以注解方式来启动springmvc:继承AbstractAnnotationConfigDispatcherServletInitializer
   实现抽象方法指定DispatcherServlet的配置信息: